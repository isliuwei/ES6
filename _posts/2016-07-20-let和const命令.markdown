---
layout: post
title:  "let和const命令"
date:   2016-07-20 18:32:57 +0800
categories: jekyll update
---
## 1.1 let命令

#### 基本用法

`ES6`新增`let`命令，用于`声明变量`。
其用法类似于`var`，但是所声明的变量只在`let命令所在的代码块内`有效。

{% highlight javascript %}
{
    let a = 10;
    var b = 1;
}
console.log(a);  // a is not defined
console.log(b);  // 1
{% endhighlight %}

for循环的计数器，适合使用let命令。

{% highlight javascript %}
for(let i = 0; i < arr.length; i++){}
console.log(i);  //
{% endhighlight %}

以上代码中计数器i，只在for循环体内有效。

比较以下两段代码的输出结果：

{% highlight javascript %}
var a = [];
for(var i=0; i<10; i++){
  a[i] = function(){
    console.log(i);
  };
}
a[6]();   // 10
{% endhighlight %}

{% highlight javascript %}
var a = [];
for(let i=0; i<10; i++){
  a[i] = function(){
    console.log(i);
  };
}
a[6]();   // 6
{% endhighlight %}


#### 不存在变量提升

let不存在`变量提升`。所以，`变量一定要在声明后使用`。

#### 不允许重复声明

let不允许在相同作用域内重复声明同一个变量。

{% highlight javascript %}
//不报错
function(){
  var a = 10;
  var a = 1;
}

//报错
function(){
  let a = 10;
  var a = 1;
}

//报错
function(){
  var a = 10;
  let a = 1;
}

//报错
function(){
  let a = 10;
  let a = 1;
}
{% endhighlight %}

## 1.2 块级作用域

ES5中只有全局作用域和函数作用域，没有块级作用域。
这会带来一下问题。

问题一：内层变量可能会覆盖外层变量。

{% highlight javascript %}
var tmp = new Date();
function fn(){
  console.log(tmp);
  if(false){
    var tmp = "hello world";
  }
}
fn(); // undefined

{% endhighlight %}

>函数fn执行后，输出结果为undefiend，原因在于变量提升导致内层的tmp变量覆盖了外层的tmp变量。


To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: http://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
